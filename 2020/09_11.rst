################################################################################
Qt下处理字节序
################################################################################

********************************************************************************
概述
********************************************************************************

在网络通信中, ``字节序`` (也称 字节顺序, 端序, 尾序; Endianness), 一般采用 **大端** (big-endian); 与之对应的就是 **小端** (little-endian);

在计算机内部, 根据 CPU 的不同, 可能采用不同的字节序; 有些处理器采用小端序, 有些处理器采用大端序, 还有些处理器的字节序是可以配置的.

具体, 可查看 `维基百科:字节序 <https://zh.wikipedia.org/wiki/%E5%AD%97%E8%8A%82%E5%BA%8F>`_


********************************************************************************
Qt 下字节序转化
********************************************************************************

使用 ``QtEndian`` 对字节序进行转化.

根据 `Qt 官方文档 <https://doc.qt.io/qt-5/qtendian.html>`_ 可得知, 共用八个转化函数:

.. code-block:: c++
    :linenos:

    T qFromBigEndian(T src)
    T qFromBigEndian(const uchar *src)
    T qFromLittleEndian(T src)
    T qFromLittleEndian(const uchar *src)
    T qToBigEndian(T src)
    void qToBigEndian(T src, uchar *dest)
    T qToLittleEndian(T src)
    T qToLittleEndian(T src, uchar *dest)
